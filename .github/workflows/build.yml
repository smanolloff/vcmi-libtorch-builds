name: VCMI libtorch builds

on:
  workflow_dispatch:
    inputs:
      pytorch_ref:
        description: pytorch ref (commit SHA or tag)
        required: true
        default: "v2.4.1"  # ee1b6804381c57161c477caa380a840a84167676

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # Info about available images:
        # https://github.com/actions/runner-images/tree/740ab068bcf1d072e2b1db63af8b77f1539dbd39?tab=readme-ov-file#available-images
        include:
          - builder: windows-2022
            target: win-x64

          - builder: ubuntu-22.04
            target: linux-x64

          - builder: macos-13
            target: macos-x64

          - builder: macos-14
            target: macos-arm64

          - builder: macos-14
            target: ios-arm64

          - builder: macos-14
            target: android-arm64

          # 32-bit android (armeabi-v7a) builds fail with assembler error
          # (same issue as https://github.com/tensorflow/tensorflow/issues/59970)
          #
          # mingw builds are not supported
          # (see https://stackoverflow.com/a/76160277)

    runs-on: ${{ matrix.builder }}
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout (this)
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Download pytorch
      run: |
        set -eux
        curl -LO https://github.com/pytorch/pytorch/releases/download/${{inputs.pytorch_ref}}/pytorch-${{inputs.pytorch_ref}}.tar.gz

    - name: Build
      id: build
      env:
        INPUT_ARCHIVE_FILE: pytorch-${{inputs.pytorch_ref}}.tar.gz
        OUTPUT_ARCHIVE_FILE: libtorch-${{inputs.pytorch_ref}}-${{matrix.target}}.txz
        PYTORCH_REF: ${{inputs.pytorch_ref}}
      run: |
        bash -x "${{matrix.target}}.sh"
        echo "artifact=$OUTPUT_ARCHIVE_FILE" >> $GITHUB_OUTPUT

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: "${{steps.build.outputs.artifact}}"
        path: "${{steps.build.outputs.artifact}}"
        compression-level: 0
        if-no-files-found: error
